<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <dubbo:application name="demo-consumer"/>

    <dubbo:registry address="zookeeper://wmsi18zk-zookeeper-1-0:2181" />

    <!--
    dubbo:consumer服务消费者缺省值配置
    1、retries，远程服务调用重试次数，不包括第一次调用，不需要重试请设为0,仅在cluster为failback/failover时有效
    2、loadbalance，配置负载均衡策略，默认为随机，random,roundrobin,leastactive，分别表示：随机，轮询，最少活跃调用
    3、async，是否缺省异步执行，不可靠异步，只是忽略返回值，不阻塞执行线程
    4、cluster，集群方式，可选：failover/failfast/failsafe/failback/forking
    5、proxy，生成代理的方式，jdk/javassist
    -->
    <dubbo:consumer loadbalance="random" async="false" cluster="failover"></dubbo:consumer>

    <!-- generate proxy for the remote service, then demoService can be used in the same way as the
    local regular interface -->

    <!--
    1、服务消费者引用服务配置，对应的配置类： org.apache.dubbo.config.ReferenceConfig
    2、在dubbo:reference中配置的async， 缺省使用<dubbo:consumer>的async，是否异步执行，不可靠异步，只是忽略返回值，不阻塞执行线程
       实际验证结果也是配置为async，不阻塞执行线程，但是未获取到返回值
    -->

    <dubbo:reference id="demoService" check="false" interface="org.apache.dubbo.demo.DemoService" retries="2"/>

    <dubbo:reference id="asyncDemoService" timeout="100000" interface="org.apache.dubbo.demo.AsyncDemoService"/>

</beans>
